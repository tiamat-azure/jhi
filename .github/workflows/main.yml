name: Application CI
on: [push, pull_request]
jobs:
  validation:
    name: 'Gradle Wrapper Validation'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
  pipeline:
    name: jhi pipeline
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
    timeout-minutes: 40
    env:
      NODE_VERSION: 16.17.0
      SPRING_OUTPUT_ANSI_ENABLED: DETECT
      SPRING_JPA_SHOW_SQL: false
      JHI_DISABLE_WEBPACK_LOGS: true
      NG_CLI_ANALYTICS: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.0
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 11
      - name: Install node.js packages
        run: npm install
      # - name: Run backend test
      #   run: |
      #     chmod +x gradlew
      #     npm run ci:backend:test
      # - name: Run frontend test
      #   run: npm run ci:frontend:test
      - name: Package application
        run: npm run java:jar:prod
      - name: Build and publish docker image
        if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          GIT_TAG=${GITHUB_REF#refs/tags/}
          DOCKER_TAG=${GIT_TAG#refs/heads/}
          echo "GIT_TAG=$GIT_TAG"
          echo "DOCKER_TAG=$DOCKER_TAG"
          if [[ "$DOCKER_TAG" == "master" || "$DOCKER_TAG" == "main" ]]; then
            DOCKER_TAG="latest"
          fi
          echo "DOCKER_TAG=$DOCKER_TAG"
          ./gradlew jib \
          -Djib.to.image=tiamatz/jhi:${DOCKER_TAG} \
          -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}" \
          -Djib.from.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.from.auth.password="${{ secrets.DOCKER_PASSWORD }}" \
          -Pprod
